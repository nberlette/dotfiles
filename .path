#!/usr/bin/env bash
# -*- coding: utf-8 -*-

## ------------------------------------------------------------------------ ##
##  .path                                    Nicholas Berlette, 2022-06-30  ##
## ------------------------------------------------------------------------ ##
##  https://github.com/nberlette/dotfiles/blob/main/.path                   ##
## ------------------------------------------------------------------------ ##


PATH="${PATH:-"$HOME/.bin:$HOME/.local/bin:$HOME/bin:/usr/local/bin:/usr/bin:/bin:/sbin:/usr/sbin:/usr/local/sbin"}"
PATH="$HOME/.bin:$HOME/.local/bin:$HOME/.dotfiles/.bin:$PATH"

if [ -z "$HOMEBREW_PREFIX" ]; then
  if ! which brew &>/dev/null; then
    export PATH="/usr/local/bin:/usr/local/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
  fi
  eval "$(brew shellenv)"
fi

HOMEBREW_PREFIX="${HOMEBREW_PREFIX:-"$(brew --prefix)"}"
export HOMEBREW_PREFIX="${HOMEBREW_PREFIX:-/usr/local}"

export GOPATH="$HOME/.go"
PATH="/usr/local/go/bin:$GOPATH/bin:$PATH"

export CDPATH="$CDPATH:$GOPATH/src/github.com:$GOPATH/src/golang.org:$GOPATH/src"
PATH="$HOME/.cargo/bin:/usr/share/bcc/tools:$PATH"

export CXXFLAGS="$CXXFLAGS -stdlib=libc++ -Wno-deprecated-declarations -Wno-deprecated -framework CoreFoundation"
PATH="${HOMEBREW_PREFIX-}/opt/mysql-client/bin:${HOMEBREW_PREFIX-}/opt/llvm/bin:$PATH"

export MYSQL_INCLUDE_DIR="${HOMEBREW_PREFIX-}/opt/mysql-client/include/mysql"
export BOOST_INCLUDE_DIR="${HOMEBREW_PREFIX-}/include"

export LDFLAGS="$LDFLAGS -L${HOMEBREW_PREFIX-}/opt/openssl/lib"
export CPPFLAGS="$CPPFLAGS -I${HOMEBREW_PREFIX-}/opt/openssl/include"
export OPENSSL_ROOT_DIR="${HOMEBREW_PREFIX-}/opt/openssl"
export PKG_CONFIG_PATH="${HOMEBREW_PREFIX-}/opt/openssl/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}"
PATH="${HOMEBREW_PREFIX-}/opt/openssl/bin:$PATH"

PATH="${HOMEBREW_PREFIX-}/opt/gnu-getopt/bin:$PATH"
if [ -d "${HOMEBREW_PREFIX:-/usr/local}/opt" ]; then
  for utility in coreutils make findutils gnu-sed; do
    # prepend utility bin to the path
    [ -d "${HOMEBREW_PREFIX:-/usr/local}/opt/${utility-}/libexec/gnubin" ] &&
      export PATH="${HOMEBREW_PREFIX:-/usr/local}/opt/${utility-}/libexec/gnubin:$PATH";

    # add the utility man pages to the MANPATH (if a manual exists)
    [ -d "${HOMEBREW_PREFIX:-/usr/local}/opt/${utility-}/libexec/gnuman" ] &&
      export MANPATH="${HOMEBREW_PREFIX:-/usr/local}/opt/${utility-}/libexec/gnubin:$MANPATH";
  done
fi
PATH="/usr/local/opt/gnu-getopt/bin:$PATH"

if [ -z "$PNPM_HOME" ]; then
  # linux
  if [ -d "$HOME/.local/share/pnpm" ]; then
    export PNPM_HOME="$HOME/.local/share/pnpm"
  # macos/darwin
  elif [ -d "$HOME/Library/pnpm" ]; then
    export PNPM_HOME="$HOME/Library/pnpm"
  else
    export PNPM_HOME="$(dirname -- "$(which pnpm 2>/dev/null)")"
  fi
fi

if [[ "$(uname)" == "Darwin" ]]; then 
  # Setting PATH for Python 3.10
  PATH="/Library/Frameworks/Python.framework/Versions/3.10/bin:${PATH}";
  [ -d "$HOME/.iterm2" ] && PATH="$HOME/.iterm2:$PATH";

fi

export PNPM_HOME="${PNPM_HOME:-"$(dirname -- "$(which pnpm &>/dev/null)")"}"

export DENO_INSTALL="$HOME/.deno" 
export DENO_INSTALL_ROOT="$DENO_INSTALL/bin"

export BUN_INSTALL="$HOME/.bun"

PATH="$BUN_INSTALL:$DENO_INSTALL_ROOT:$PNPM_HOME:$PATH"

# dedupe and export the final product :)
export PATH="$(dedupe_path 2>/dev/null || printf "$PATH")"
